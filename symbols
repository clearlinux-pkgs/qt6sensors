libQt6Sensors.so.6:NonQt
libQt6Sensors.so.6:QAccelerometer::QAccelerometer(QObject*)@@Qt_6
libQt6Sensors.so.6:QAccelerometer::accelerationModeChanged(QAccelerometer::AccelerationMode)@@Qt_6
libQt6Sensors.so.6:QAccelerometer::setAccelerationMode(QAccelerometer::AccelerationMode)@@Qt_6
libQt6Sensors.so.6:QAccelerometer::~QAccelerometer()@@Qt_6
libQt6Sensors.so.6:QAccelerometerFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QAccelerometerReading::QAccelerometerReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QAccelerometerReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QAccelerometerReading::setX(double)@@Qt_6
libQt6Sensors.so.6:QAccelerometerReading::setY(double)@@Qt_6
libQt6Sensors.so.6:QAccelerometerReading::setZ(double)@@Qt_6
libQt6Sensors.so.6:QAccelerometerReading::~QAccelerometerReading()@@Qt_6
libQt6Sensors.so.6:QAmbientLightFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QAmbientLightReading::QAmbientLightReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QAmbientLightReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QAmbientLightReading::setLightLevel(QAmbientLightReading::LightLevel)@@Qt_6
libQt6Sensors.so.6:QAmbientLightReading::~QAmbientLightReading()@@Qt_6
libQt6Sensors.so.6:QAmbientLightSensor::QAmbientLightSensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QAmbientLightSensor::~QAmbientLightSensor()@@Qt_6
libQt6Sensors.so.6:QAmbientTemperatureFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QAmbientTemperatureReading::QAmbientTemperatureReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QAmbientTemperatureReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QAmbientTemperatureReading::setTemperature(double)@@Qt_6
libQt6Sensors.so.6:QAmbientTemperatureReading::~QAmbientTemperatureReading()@@Qt_6
libQt6Sensors.so.6:QAmbientTemperatureSensor::QAmbientTemperatureSensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QAmbientTemperatureSensor::~QAmbientTemperatureSensor()@@Qt_6
libQt6Sensors.so.6:QCompass::QCompass(QObject*)@@Qt_6
libQt6Sensors.so.6:QCompass::~QCompass()@@Qt_6
libQt6Sensors.so.6:QCompassFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QCompassReading::QCompassReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QCompassReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QCompassReading::setAzimuth(double)@@Qt_6
libQt6Sensors.so.6:QCompassReading::setCalibrationLevel(double)@@Qt_6
libQt6Sensors.so.6:QCompassReading::~QCompassReading()@@Qt_6
libQt6Sensors.so.6:QGyroscope::QGyroscope(QObject*)@@Qt_6
libQt6Sensors.so.6:QGyroscope::~QGyroscope()@@Qt_6
libQt6Sensors.so.6:QGyroscopeFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QGyroscopeReading::QGyroscopeReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QGyroscopeReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QGyroscopeReading::setX(double)@@Qt_6
libQt6Sensors.so.6:QGyroscopeReading::setY(double)@@Qt_6
libQt6Sensors.so.6:QGyroscopeReading::setZ(double)@@Qt_6
libQt6Sensors.so.6:QGyroscopeReading::~QGyroscopeReading()@@Qt_6
libQt6Sensors.so.6:QHumidityFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QHumidityReading::QHumidityReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QHumidityReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QHumidityReading::setAbsoluteHumidity(double)@@Qt_6
libQt6Sensors.so.6:QHumidityReading::setRelativeHumidity(double)@@Qt_6
libQt6Sensors.so.6:QHumidityReading::~QHumidityReading()@@Qt_6
libQt6Sensors.so.6:QHumiditySensor::QHumiditySensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QHumiditySensor::~QHumiditySensor()@@Qt_6
libQt6Sensors.so.6:QIRProximityFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QIRProximityReading::QIRProximityReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QIRProximityReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QIRProximityReading::setReflectance(double)@@Qt_6
libQt6Sensors.so.6:QIRProximityReading::~QIRProximityReading()@@Qt_6
libQt6Sensors.so.6:QIRProximitySensor::QIRProximitySensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QIRProximitySensor::~QIRProximitySensor()@@Qt_6
libQt6Sensors.so.6:QLidFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QLidReading::QLidReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QLidReading::backLidChanged(bool)@@Qt_6
libQt6Sensors.so.6:QLidReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QLidReading::frontLidChanged(bool)@@Qt_6
libQt6Sensors.so.6:QLidReading::setBackLidClosed(bool)@@Qt_6
libQt6Sensors.so.6:QLidReading::setFrontLidClosed(bool)@@Qt_6
libQt6Sensors.so.6:QLidReading::~QLidReading()@@Qt_6
libQt6Sensors.so.6:QLidSensor::QLidSensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QLidSensor::~QLidSensor()@@Qt_6
libQt6Sensors.so.6:QLightFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QLightReading::QLightReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QLightReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QLightReading::setLux(double)@@Qt_6
libQt6Sensors.so.6:QLightReading::~QLightReading()@@Qt_6
libQt6Sensors.so.6:QLightSensor::QLightSensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QLightSensor::fieldOfViewChanged(double)@@Qt_6
libQt6Sensors.so.6:QLightSensor::setFieldOfView(double)@@Qt_6
libQt6Sensors.so.6:QLightSensor::~QLightSensor()@@Qt_6
libQt6Sensors.so.6:QMagnetometer::QMagnetometer(QObject*)@@Qt_6
libQt6Sensors.so.6:QMagnetometer::returnGeoValuesChanged(bool)@@Qt_6
libQt6Sensors.so.6:QMagnetometer::setReturnGeoValues(bool)@@Qt_6
libQt6Sensors.so.6:QMagnetometer::~QMagnetometer()@@Qt_6
libQt6Sensors.so.6:QMagnetometerFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QMagnetometerReading::QMagnetometerReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QMagnetometerReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QMagnetometerReading::setCalibrationLevel(double)@@Qt_6
libQt6Sensors.so.6:QMagnetometerReading::setX(double)@@Qt_6
libQt6Sensors.so.6:QMagnetometerReading::setY(double)@@Qt_6
libQt6Sensors.so.6:QMagnetometerReading::setZ(double)@@Qt_6
libQt6Sensors.so.6:QMagnetometerReading::~QMagnetometerReading()@@Qt_6
libQt6Sensors.so.6:QOrientationFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QOrientationReading::QOrientationReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QOrientationReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QOrientationReading::setOrientation(QOrientationReading::Orientation)@@Qt_6
libQt6Sensors.so.6:QOrientationReading::~QOrientationReading()@@Qt_6
libQt6Sensors.so.6:QOrientationSensor::QOrientationSensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QOrientationSensor::~QOrientationSensor()@@Qt_6
libQt6Sensors.so.6:QPressureFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QPressureReading::QPressureReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QPressureReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QPressureReading::setPressure(double)@@Qt_6
libQt6Sensors.so.6:QPressureReading::setTemperature(double)@@Qt_6
libQt6Sensors.so.6:QPressureReading::~QPressureReading()@@Qt_6
libQt6Sensors.so.6:QPressureSensor::QPressureSensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QPressureSensor::~QPressureSensor()@@Qt_6
libQt6Sensors.so.6:QProximityFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QProximityReading::QProximityReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QProximityReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QProximityReading::setClose(bool)@@Qt_6
libQt6Sensors.so.6:QProximityReading::~QProximityReading()@@Qt_6
libQt6Sensors.so.6:QProximitySensor::QProximitySensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QProximitySensor::~QProximitySensor()@@Qt_6
libQt6Sensors.so.6:QRotationFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QRotationReading::QRotationReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QRotationReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QRotationReading::~QRotationReading()@@Qt_6
libQt6Sensors.so.6:QRotationSensor::QRotationSensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QRotationSensor::hasZChanged(bool)@@Qt_6
libQt6Sensors.so.6:QRotationSensor::setHasZ(bool)@@Qt_6
libQt6Sensors.so.6:QRotationSensor::~QRotationSensor()@@Qt_6
libQt6Sensors.so.6:QSensor::activeChanged()@@Qt_6
libQt6Sensors.so.6:QSensor::addFilter(QSensorFilter*)@@Qt_6
libQt6Sensors.so.6:QSensor::alwaysOnChanged()@@Qt_6
libQt6Sensors.so.6:QSensor::availableSensorsChanged()@@Qt_6
libQt6Sensors.so.6:QSensor::axesOrientationModeChanged(QSensor::AxesOrientationMode)@@Qt_6
libQt6Sensors.so.6:QSensor::bufferSizeChanged(int)@@Qt_6
libQt6Sensors.so.6:QSensor::busyChanged()@@Qt_6
libQt6Sensors.so.6:QSensor::connectToBackend()@@Qt_6
libQt6Sensors.so.6:QSensor::currentOrientationChanged(int)@@Qt_6
libQt6Sensors.so.6:QSensor::dataRateChanged()@@Qt_6
libQt6Sensors.so.6:QSensor::efficientBufferSizeChanged(int)@@Qt_6
libQt6Sensors.so.6:QSensor::identifierChanged()@@Qt_6
libQt6Sensors.so.6:QSensor::maxBufferSizeChanged(int)@@Qt_6
libQt6Sensors.so.6:QSensor::readingChanged()@@Qt_6
libQt6Sensors.so.6:QSensor::registerInstance()@@Qt_6
libQt6Sensors.so.6:QSensor::removeFilter(QSensorFilter*)@@Qt_6
libQt6Sensors.so.6:QSensor::sensorError(int)@@Qt_6
libQt6Sensors.so.6:QSensor::sensorTypes()@@Qt_6
libQt6Sensors.so.6:QSensor::setActive(bool)@@Qt_6
libQt6Sensors.so.6:QSensor::setAlwaysOn(bool)@@Qt_6
libQt6Sensors.so.6:QSensor::setAxesOrientationMode(QSensor::AxesOrientationMode)@@Qt_6
libQt6Sensors.so.6:QSensor::setBufferSize(int)@@Qt_6
libQt6Sensors.so.6:QSensor::setCurrentOrientation(int)@@Qt_6
libQt6Sensors.so.6:QSensor::setDataRate(int)@@Qt_6
libQt6Sensors.so.6:QSensor::setEfficientBufferSize(int)@@Qt_6
libQt6Sensors.so.6:QSensor::setMaxBufferSize(int)@@Qt_6
libQt6Sensors.so.6:QSensor::setOutputRange(int)@@Qt_6
libQt6Sensors.so.6:QSensor::setSkipDuplicates(bool)@@Qt_6
libQt6Sensors.so.6:QSensor::setUserOrientation(int)@@Qt_6
libQt6Sensors.so.6:QSensor::skipDuplicatesChanged(bool)@@Qt_6
libQt6Sensors.so.6:QSensor::start()@@Qt_6
libQt6Sensors.so.6:QSensor::stop()@@Qt_6
libQt6Sensors.so.6:QSensor::userOrientationChanged(int)@@Qt_6
libQt6Sensors.so.6:QSensor::~QSensor()@@Qt_6
libQt6Sensors.so.6:QSensorBackend::newReadingAvailable()@@Qt_6
libQt6Sensors.so.6:QSensorBackend::sensorBusy(bool)@@Qt_6
libQt6Sensors.so.6:QSensorBackend::sensorError(int)@@Qt_6
libQt6Sensors.so.6:QSensorBackend::sensorStopped()@@Qt_6
libQt6Sensors.so.6:QSensorBackend::~QSensorBackend()@@Qt_6
libQt6Sensors.so.6:QSensorBackendFactory::~QSensorBackendFactory()@@Qt_6
libQt6Sensors.so.6:QSensorChangesInterface::~QSensorChangesInterface()@@Qt_6
libQt6Sensors.so.6:QSensorFilter::QSensorFilter()@@Qt_6
libQt6Sensors.so.6:QSensorFilter::setSensor(QSensor*)@@Qt_6
libQt6Sensors.so.6:QSensorFilter::~QSensorFilter()@@Qt_6
libQt6Sensors.so.6:QSensorManager::createBackend(QSensor*)@@Qt_6
libQt6Sensors.so.6:QSensorPluginInterface::~QSensorPluginInterface()@@Qt_6
libQt6Sensors.so.6:QSensorReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QSensorReading::~QSensorReading()@@Qt_6
libQt6Sensors.so.6:QTapFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QTapReading::QTapReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QTapReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QTapReading::setDoubleTap(bool)@@Qt_6
libQt6Sensors.so.6:QTapReading::setTapDirection(QTapReading::TapDirection)@@Qt_6
libQt6Sensors.so.6:QTapReading::~QTapReading()@@Qt_6
libQt6Sensors.so.6:QTapSensor::QTapSensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QTapSensor::returnDoubleTapEventsChanged(bool)@@Qt_6
libQt6Sensors.so.6:QTapSensor::setReturnDoubleTapEvents(bool)@@Qt_6
libQt6Sensors.so.6:QTapSensor::~QTapSensor()@@Qt_6
libQt6Sensors.so.6:QTiltFilter::filter(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QTiltReading::QTiltReading(QObject*)@@Qt_6
libQt6Sensors.so.6:QTiltReading::copyValuesFrom(QSensorReading*)@@Qt_6
libQt6Sensors.so.6:QTiltReading::setXRotation(double)@@Qt_6
libQt6Sensors.so.6:QTiltReading::setYRotation(double)@@Qt_6
libQt6Sensors.so.6:QTiltReading::~QTiltReading()@@Qt_6
libQt6Sensors.so.6:QTiltSensor::QTiltSensor(QObject*)@@Qt_6
libQt6Sensors.so.6:QTiltSensor::calibrate()@@Qt_6
libQt6Sensors.so.6:QTiltSensor::~QTiltSensor()@@Qt_6
libQt6Sensors.so.6:Qt_6
libQt6Sensors.so.6:Qt_6_PRIVATE_API
